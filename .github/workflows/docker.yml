name: Release and Docker Publish

on:
  push:
    branches:
      - dev
      - staging
      - main
    tags:
      - 'v*.*.*'      # Production release
      - 'v*.*.*-beta' # Staging release
      - 'v*.*.*-dev'  # Development release

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      - name: Lint Commit Messages
        run: |
          npx commitlint origin/${{ github.event.pull_request.base.ref }} -- ${{ github.event.pull_request.head.sha }}
      
        # Run semantic-release
      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  docker:
    runs-on: ubuntu-latest
    needs: release # Menunggu job `release` selesai

    steps:
      # Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Set environment variables based on branch/tag
      - name: Set Environment Variables
        id: get-env
        run: |
          if [[ "${{ github.ref }}" == refs/heads/dev ]]; then
            echo "TAG=dev" >> $GITHUB_ENV
            echo "APP_ENV=development" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == refs/heads/staging ]]; then
            echo "TAG=staging" >> $GITHUB_ENV
            echo "APP_ENV=staging" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == refs/heads/main ]]; then
            echo "TAG=latest" >> $GITHUB_ENV
            echo "APP_ENV=production" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == refs/tags/v*.*.*-beta ]]; then
            echo "TAG=${{ github.ref_name }}" >> $GITHUB_ENV
            echo "APP_ENV=staging" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == refs/tags/v*.*.*-dev ]]; then
            echo "TAG=${{ github.ref_name }}" >> $GITHUB_ENV
            echo "APP_ENV=development" >> $GITHUB_ENV
          else
            echo "TAG=${{ github.ref_name }}" >> $GITHUB_ENV
            echo "APP_ENV=production" >> $GITHUB_ENV
          fi

      # Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          docker build --build-arg ENV=${{ env.APP_ENV }} -t satriagitu/go-crud-postgres:${{ env.TAG }} . 
          docker push satriagitu/go-crud-postgres:${{ env.TAG }}
